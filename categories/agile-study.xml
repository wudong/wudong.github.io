<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Warren Liu (Posts about agile study)</title><link>https://example.com/</link><description></description><atom:link href="https://example.com/categories/agile-study.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2017 &lt;a href="mailto:n.tesla@example.com"&gt;Warren Liu&lt;/a&gt; </copyright><lastBuildDate>Fri, 14 Jul 2017 20:53:57 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>agile</title><link>https://example.com/posts/agile-notes/</link><dc:creator>Warren Liu</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Practices of an Agile Developer&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;In the beginning of the development, it will be good to have a hotfix
policy in place to make it easy to do hotfix.
&lt;/li&gt;
&lt;li&gt;Integration is one of the biggest risk in software development. It
will be best to integrate a few times a day.
&lt;/li&gt;
&lt;li&gt;To integrate as early and as often as possible to avoid problems of
integration later.
&lt;/li&gt;
&lt;li&gt;Automate deployment early as well. &lt;i&gt;Deploy hotfix in the production
environment should be made easy&lt;/i&gt;.
&lt;/li&gt;
&lt;li&gt;Agility is all about &lt;b&gt;managing change&lt;/b&gt; and the code is one of things
that change the most.
&lt;/li&gt;
&lt;li&gt;Thinking of unit test results same as compiler result. If it doesn't
pass the test, or even, no test at all for a piece of code, it
should be treated equivalent to not compiling.
&lt;/li&gt;
&lt;li&gt;Unit test may not be appropriate for prototyping or
experimenting. In the rare cases that prototypes go into production,
unit test need to be added for them.
&lt;/li&gt;
&lt;li&gt;Estimate the time needed for a task, and when finish a task, keep
track of how long it really took.
&lt;/li&gt;
&lt;li&gt;Keep a solution log, maintain a log of problems faced and solutions
found. &lt;span class="underline"&gt;Even better than maintaining a log is sharing it with others&lt;/span&gt;.
&lt;/li&gt;
&lt;li&gt;Warnings are really errors.
&lt;ul class="org-ul"&gt;
&lt;li&gt;If your compiler allows you to fine-tune warning reporting levels,
turn that all the way up so warnings are not ignored.
&lt;/li&gt;
&lt;li&gt;You can usually instruct the compiler to specifically suppress
unavoidable warnings.
&lt;/li&gt;
&lt;li&gt;Deprecated methods have been deprecated for a reason.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Provide useful error messages to the user. Allow user to see error
&lt;b&gt;details&lt;/b&gt; with &lt;i&gt;additional click&lt;/i&gt; could be very useful for debug.
&lt;/li&gt;
&lt;li&gt;Information logged may contain not only the details about what went
wrong but also a snapshot of the state of the system (for example,
the session state in a web application)
&lt;/li&gt;
&lt;li&gt;Type of errors, by keeping track of what kind of error you are
reporting, you can provide more appropriate advice to your audience.
&lt;ul class="org-ul"&gt;
&lt;li&gt;Program defects, bugs: NullPointerException, missing key values,
etc. The user, or system administrator can do nothing about it.
&lt;/li&gt;
&lt;li&gt;Environment problem: failure to connect to a database or remote
service, insufficient permissions, etc. The program can do nothing
about it.
&lt;/li&gt;
&lt;li&gt;User error.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Practice collective ownership
&lt;/li&gt;
&lt;li&gt;Architect must write code
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Restrospective&lt;/h2&gt;
&lt;/div&gt;</description><category>agile study</category><guid>https://example.com/posts/agile-notes/</guid><pubDate>Fri, 14 Jul 2017 15:28:48 GMT</pubDate></item></channel></rss>