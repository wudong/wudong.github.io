<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Warren Liu (Posts about zookeeper)</title><link>https://example.com/</link><description></description><atom:link href="https://example.com/categories/zookeeper.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2017 &lt;a href="mailto:n.tesla@example.com"&gt;Warren Liu&lt;/a&gt; </copyright><lastBuildDate>Sat, 15 Jul 2017 10:50:59 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>ZooKeeper Note</title><link>https://example.com/posts/notes/zookeeper-notes/</link><dc:creator>Warren Liu</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://example.com/posts/notes/zookeeper-notes/#sec-1"&gt;Note on ZooKeeper&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://example.com/posts/notes/zookeeper-notes/#sec-1-1"&gt;Concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://example.com/posts/notes/zookeeper-notes/#sec-1-2"&gt;Simple API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://example.com/posts/notes/zookeeper-notes/#sec-1-3"&gt;Implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://example.com/posts/notes/zookeeper-notes/#sec-1-4"&gt;&lt;span class="todo TODO"&gt;TODO&lt;/span&gt; Programmer's Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://example.com/posts/notes/zookeeper-notes/#sec-1-5"&gt;&lt;span class="todo TODO"&gt;TODO&lt;/span&gt; Java API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Note on ZooKeeper&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-1-1" class="outline-3"&gt;
&lt;h3 id="sec-1-1"&gt;Concepts&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;ZooKeeper is a high-performance &lt;b&gt;coordination service&lt;/b&gt; for distributed
applications.
&lt;/li&gt;
&lt;li&gt;Allows distributed processes to coordinate with each other through a
&lt;i&gt;shared &lt;b&gt;hierarchal namespace&lt;/b&gt;&lt;/i&gt;, which is organized similarly to a
standard file system.
&lt;/li&gt;
&lt;li&gt;ZooKeeper's data is kept in-memory, which means ZooKeeper can
achieve high throughput and low latency numbers.
&lt;/li&gt;
&lt;li&gt;ZooKeeper itself is intended to be &lt;b&gt;replicated&lt;/b&gt; over a sets of hosts
called an &lt;b&gt;ensembl&lt;/b&gt;.
&lt;ul class="org-ul"&gt;
&lt;li&gt;The servers that make up the ZooKeeper service must all know about
each other.
&lt;/li&gt;
&lt;li&gt;They maintain an &lt;i&gt;in-memory&lt;/i&gt; image of state, along with a
&lt;b&gt;transaction logs&lt;/b&gt; and &lt;b&gt;snapshots&lt;/b&gt; in a persistent store.
&lt;/li&gt;
&lt;li&gt;As long as a majority of the servers are available, the ZooKeeper
service will be available.
&lt;/li&gt;
&lt;li&gt;Clients connect to a &lt;b&gt;single&lt;/b&gt; ZooKeeper server. The client maintains
&lt;b&gt;a TCP connection&lt;/b&gt; through which it sends request, get responses,
gets &lt;b&gt;watch events&lt;/b&gt; and sends &lt;b&gt;heart beats&lt;/b&gt;.
&lt;/li&gt;
&lt;li&gt;If the TCP connection to the server breaks, the client will
connect to a different server.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ZooKeeper is ordered in the sense that, ZooKeeper stamps each update
with a number that reflects the order of all ZooKeeper transactions.
&lt;ul class="org-ul"&gt;
&lt;li&gt;Subsequent operations can use the order to implement higher-level
abstractions, such as &lt;b&gt;synchronization primitives&lt;/b&gt;.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ZooKeeper is fast in &lt;b&gt;read-dominant&lt;/b&gt; workloads, it performs best
where reads are more common than writes, at ratios of around 10:1.
&lt;/li&gt;
&lt;li&gt;ZooKeeper data nodes are called &lt;b&gt;znode&lt;/b&gt;. Unlike standard file
system, each node in a ZooKeeper namespace can have data associated
with it, &lt;b&gt;as well as&lt;/b&gt; children.
&lt;/li&gt;
&lt;li&gt;Znodes maintain a &lt;b&gt;stat&lt;/b&gt; structure that includes &lt;b&gt;version numbers&lt;/b&gt; for
data changes, ACL changes, and &lt;b&gt;timestamps&lt;/b&gt;. Whenever a client
retrieves data it also receives the version of the data.
&lt;/li&gt;
&lt;li&gt;The data stored at each znode in a namespace is read and written
atomically. Each node has an Access Control List (ACL) that
restricts who can do that.
&lt;/li&gt;
&lt;li&gt;ZooKeeper also has the notion of &lt;b&gt;ephemeral nodes&lt;/b&gt;. These znodes
exists as long as the session that created the znode is active. When
the session ends the znode is deleted.
&lt;/li&gt;
&lt;li&gt;Clients can &lt;b&gt;set a watch&lt;/b&gt; on a znodes. A watch will be triggered and
removed when the znode changes.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-2" class="outline-3"&gt;
&lt;h3 id="sec-1-2"&gt;Simple API&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-2"&gt;
&lt;p&gt;
One of the design goals of ZooKeeper is provide a very simple
programming interface:
&lt;/p&gt;
&lt;dl class="org-dl"&gt;
&lt;dt&gt; create &lt;/dt&gt;&lt;dd&gt;create a node at a location in the tree
&lt;/dd&gt;
&lt;dt&gt; delete &lt;/dt&gt;&lt;dd&gt;deletes a node
&lt;/dd&gt;
&lt;dt&gt; exists &lt;/dt&gt;&lt;dd&gt;tests if a node exists at a location
&lt;/dd&gt;
&lt;dt&gt; get data &lt;/dt&gt;&lt;dd&gt;reads the data from a node
&lt;/dd&gt;
&lt;dt&gt; set data &lt;/dt&gt;&lt;dd&gt;writes data to a node
&lt;/dd&gt;
&lt;dt&gt; get children &lt;/dt&gt;&lt;dd&gt;retrieves a list of children of a node
&lt;/dd&gt;
&lt;dt&gt; sync &lt;/dt&gt;&lt;dd&gt;waits for data to be propagated.
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-3" class="outline-3"&gt;
&lt;h3 id="sec-1-3"&gt;Implementation&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-3"&gt;

&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://zookeeper.apache.org/doc/r3.3.3/images/zkcomponents.jpg" alt="zkcomponents.jpg"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The replicated database is an *in-memory( database containing the
entire data tree. Updates are logged to disk for recoverability, and
writes are serialized to disk &lt;b&gt;before&lt;/b&gt; thay are applied to the
in-memory database.
&lt;/li&gt;
&lt;li&gt;Client connect to exactly one server to submit request:
&lt;ul class="org-ul"&gt;
&lt;li&gt;Read requests are serviced from the local replica.
&lt;/li&gt;
&lt;li&gt;Write requests are processed by an agreement protocol.
&lt;ul class="org-ul"&gt;
&lt;li&gt;All write requests are forwarded to a single server, called the
&lt;b&gt;leader&lt;/b&gt;. The rest of the ZooKeeper servers, called &lt;b&gt;followers&lt;/b&gt;,
receive message proposals from the leader and agree upon message delivery.
&lt;/li&gt;
&lt;li&gt;The messaging layer take care of replacing leaders on failures and
syncing followers with leaders.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-4" class="outline-3"&gt;
&lt;h3 id="sec-1-4"&gt;&lt;span class="todo TODO"&gt;TODO&lt;/span&gt; Programmer's Guide&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-4"&gt;
&lt;p&gt;
&lt;a href="https://zookeeper.apache.org/doc/r3.3.3/zookeeperProgrammers.html"&gt;https://zookeeper.apache.org/doc/r3.3.3/zookeeperProgrammers.html&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-1-5" class="outline-3"&gt;
&lt;h3 id="sec-1-5"&gt;&lt;span class="todo TODO"&gt;TODO&lt;/span&gt; Java API&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-5"&gt;
&lt;p&gt;
&lt;a href="https://zookeeper.apache.org/doc/r3.3.3/api/index.html"&gt;https://zookeeper.apache.org/doc/r3.3.3/api/index.html&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>zookeeper</category><guid>https://example.com/posts/notes/zookeeper-notes/</guid><pubDate>Fri, 14 Jul 2017 15:28:48 GMT</pubDate></item></channel></rss>