<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Warren Liu (Posts about gradle)</title><link>https://wudong.graceliu.uk/</link><description></description><atom:link href="https://wudong.graceliu.uk/categories/gradle.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2017 &lt;a href="mailto:wudong@graceliu.uk"&gt;Warren Liu&lt;/a&gt; </copyright><lastBuildDate>Mon, 17 Jul 2017 07:12:09 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Gradle In Action</title><link>https://wudong.graceliu.uk/posts/reading/gradle-in-action/</link><dc:creator>Warren Liu</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wudong.graceliu.uk/posts/reading/gradle-in-action/#sec-1"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wudong.graceliu.uk/posts/reading/gradle-in-action/#sec-2"&gt;Using the command line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wudong.graceliu.uk/posts/reading/gradle-in-action/#sec-3"&gt;Using the java plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Getting started&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;An hello world example:
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="n"&gt;helloWorld&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;doLast&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s1"&gt;'Hello world!'&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Execute the build script with &lt;code&gt;gradle -q helloWorld&lt;/code&gt;, the &lt;code&gt;-q&lt;/code&gt;
    tell Gradle only ouptut the task's output.
&lt;/li&gt;
&lt;li&gt;Tasks and actions are important elements of the language.
&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;Action&lt;/code&gt; doLast specify it is the last action that's executed
for a task.
&lt;/li&gt;
&lt;li&gt;In a more concise way of same logic using &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="n"&gt;helloWorld&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s1"&gt;'Hello world!'&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dynamic task definition and task chaining
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="n"&gt;startSession&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;chant&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;chant&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;ant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;echo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;message:&lt;/span&gt; &lt;span class="s1"&gt;'Repeat after me...'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;times&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="s2"&gt;"YayGradle$it"&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s1"&gt;'Gradle rocks'&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;yayGradle0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dependsOn&lt;/span&gt; &lt;span class="n"&gt;startSession&lt;/span&gt;
&lt;span class="n"&gt;yayGradle2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dependsOn&lt;/span&gt; &lt;span class="n"&gt;yayGradle1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yayGradle0&lt;/span&gt;

&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="nf"&gt;groupTherapy&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;dependsOn:&lt;/span&gt; &lt;span class="n"&gt;yaygradle2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;task&lt;/code&gt; can be used to dynamically define tasks
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dependsOn&lt;/code&gt; defines dependencies between tasks
&lt;/li&gt;
&lt;li&gt;Gradle is tight integrated with Ant. Every script is equipped with
a property call &lt;code&gt;ant&lt;/code&gt; that grants direct access to Ant tasks
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Using the command line&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;list available tasks of a project: &lt;br&gt;
  &lt;code&gt;gradle -q tasks&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;list all available properties: &lt;br&gt;
  &lt;code&gt;gradle properties&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;task execution: can execute multiple tasks in a single build run &lt;br&gt;
  &lt;code&gt;gradle yayGradle0 groupTherapy&lt;/code&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;will execute the task &lt;code&gt;yayGradle0&lt;/code&gt; first then task &lt;code&gt;groupTherapy&lt;/code&gt; second.
&lt;/li&gt;
&lt;li&gt;Tasks are always executed just &lt;b&gt;once&lt;/b&gt;.
&lt;/li&gt;
&lt;li&gt;Gradle can abbreviate camel-cased task name on the command
line. So the command below is same as above &lt;br&gt;
    &lt;code&gt;gradle yG0 gT&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;However, the abbreviation has to be unique
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;exclude&lt;/b&gt; a task and its dependent tasks: &lt;br&gt;
  &lt;code&gt;gradle groupTherapy -x yayGradle0&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;specify a &lt;b&gt;build file&lt;/b&gt; with &lt;code&gt;-b, --build-file&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;build offline&lt;/b&gt; with &lt;code&gt;offline&lt;/code&gt; to only check the local dependency
cache for dependencies.
&lt;/li&gt;
&lt;li&gt;set property option:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;-D, --system-prop&lt;/code&gt; : set jvm system property
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P, --project-prop&lt;/code&gt; : set project properties, which are variables
available in your build script.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;logging: &lt;code&gt;-i, --info&lt;/code&gt;, &lt;code&gt;-s --stacktrace&lt;/code&gt;, &lt;code&gt;-q, --quite&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Gradle daemon: &lt;code&gt;--daemon&lt;/code&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;subsequent invocations of the &lt;code&gt;gradle&lt;/code&gt; command will now reuse the
daemon process.
&lt;/li&gt;
&lt;li&gt;The daemon process will automatically expire after a three-hour
idle time.
&lt;/li&gt;
&lt;li&gt;At any time you can choose to build without using the daemon with
&lt;code&gt;--no-daemon&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;To stop the daemon &lt;code&gt;gradle --stop&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;Using the java plugin&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Tell your project to use the Java plugin: &lt;br&gt;
  ~apply plugin: 'java'~
&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;build&lt;/code&gt; task to compile, run test and assembles the Jar.
&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>gradle</category><category>java</category><guid>https://wudong.graceliu.uk/posts/reading/gradle-in-action/</guid><pubDate>Fri, 14 Jul 2017 23:00:00 GMT</pubDate></item></channel></rss>